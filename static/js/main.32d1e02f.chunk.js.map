{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","NotifyError.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Spinner/Spinner.styled.jsx","components/Spinner/Spinner.jsx","components/ImagesInfo/ImagesInfo.styled.jsx","services/Api.js","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ImagesInfo/ImagesInfo.jsx","components/App/App.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/App/App.jsx","index.js"],"names":["SearchbarHeader","styled","header","SearchForm","form","SearchFormButton","button","SearchFormButtonLabel","span","SearchFormInput","input","onError","message","alert","title","text","autoOpen","minHeight","width","maxTextHeight","animateSpeed","shadow","delay","Searchbar","onSubmit","useState","imageName","setImageName","event","preventDefault","trim","console","log","type","autocomplete","autoFocus","placeholder","onChange","value","currentTarget","toLowerCase","ImageGalleryList","ul","ImageGalleryListItem","li","ImageGalleryItemImg","img","ImageGalleryItem","src","onImageClick","largeImageURL","alt","onClick","ImageGallery","images","map","image","webformatURL","id","SppinerContainer","div","Spinner","color","height","timeout","ImagesInfoText","p","fetchImages","name","page","URL","fetch","then","responce","ok","json","Promise","reject","Error","ButtonLoadMore","Button","ImagesInfo","setImage","error","setError","setPage","status","setStatus","useEffect","imageArray","resetPage","Fetch","a","data","hits","length","state","scrollToEnd","setTimeout","window","scrollBy","top","document","documentElement","scrollHeight","behavior","Container","ModalImg","Overlay","ModalContainer","ModalRoot","querySelector","Modal","onClose","children","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","target","App","showModal","setShowModal","setLargeImageURL","toggleModal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32d1e02f.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const SearchbarHeader = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nexport const SearchFormButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`\r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`\r\n","import { alert } from '@pnotify/core'\r\nimport '@pnotify/core/dist/PNotify.css'\r\nimport '@pnotify/core/dist/BrightTheme.css'\r\n\r\nexport function onError(message) {\r\n  return alert({\r\n    title: 'Ошибка',\r\n    text: `${message}`,\r\n    autoOpen: true,\r\n    minHeight: '16px',\r\n    width: '300px',\r\n    maxTextHeight: null,\r\n    animateSpeed: 'normal',\r\n    shadow: true,\r\n    delay: 1500,\r\n  })\r\n}\r\n","import {\r\n  SearchbarHeader,\r\n  SearchForm,\r\n  SearchFormButton,\r\n  SearchFormButtonLabel,\r\n  SearchFormInput,\r\n} from './Searchbar.styled'\r\nimport React, { useState } from 'react'\r\nimport { onError } from '../../NotifyError'\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [imageName, setImageName] = useState('')\r\n\r\n  const handleNameChange = (event) => {\r\n    const value = event.currentTarget.value\r\n    setImageName(value.toLowerCase())\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (imageName.trim() === '') {\r\n      console.log('Ведите имя покемона')\r\n      onError('Введите текст')\r\n      return\r\n    }\r\n\r\n    onSubmit(imageName)\r\n\r\n    setImageName('')\r\n  }\r\n\r\n  return (\r\n    <SearchbarHeader>\r\n      <SearchForm onSubmit={handleSubmit}>\r\n        <SearchFormButton type=\"submit\">\r\n          <SearchFormButtonLabel></SearchFormButtonLabel>\r\n        </SearchFormButton>\r\n\r\n        <SearchFormInput\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleNameChange}\r\n          value={imageName}\r\n        ></SearchFormInput>\r\n      </SearchForm>\r\n    </SearchbarHeader>\r\n  )\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ImageGalleryList = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ImageGalleryListItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`\r\n\r\nexport const ImageGalleryItemImg = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`\r\n","import {\r\n  ImageGalleryListItem,\r\n  ImageGalleryItemImg,\r\n} from './ImageGalleryItem.styled'\r\n\r\nexport default function ImageGalleryItem({\r\n  src,\r\n  imageName,\r\n  onImageClick,\r\n  largeImageURL,\r\n}) {\r\n  return (\r\n    <ImageGalleryListItem>\r\n      <ImageGalleryItemImg\r\n        src={src}\r\n        alt={imageName}\r\n        onClick={() => onImageClick(largeImageURL)}\r\n      />\r\n    </ImageGalleryListItem>\r\n  )\r\n}\r\n","import { ImageGalleryList } from './ImageGallery.styled'\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\n\r\nexport default function ImageGallery({ images, imageName, onImageClick }) {\r\n  return (\r\n    <ImageGalleryList>\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          src={image.webformatURL}\r\n          imageName={imageName}\r\n          onImageClick={onImageClick}\r\n          largeImageURL={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ImageGalleryList>\r\n  )\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const SppinerContainer = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 25vh;\r\n  margin-left: 100vh;\r\n`\r\n","import Loader from 'react-loader-spinner'\r\nimport { SppinerContainer } from './Spinner.styled'\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <SppinerContainer>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0}\r\n      />\r\n    </SppinerContainer>\r\n  )\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ImagesInfoText = styled.p`\r\n  margin-top: 35vh;\r\n  margin-left: 80vh;\r\n  font-size: 36px;\r\n  font-weight: 600;\r\n  font-family: 'Open Sans', sans-serif;\r\n  color: #3f51b5;\r\n`\r\n","export function fetchImages(name, page) {\r\n  const KEY = '21785158-d7699e1d635f5d39ae805dbbd'\r\n  const URL = `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n\r\n  return fetch(URL).then((responce) => {\r\n    if (responce.ok) {\r\n      return responce.json()\r\n    }\r\n\r\n    return Promise.reject(new Error('Ваш запрос не дал результата'))\r\n  })\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const ButtonLoadMore = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  width: 180px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`\r\n","import { ButtonLoadMore } from './Button.styled'\r\nimport React from 'react'\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <ButtonLoadMore type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </ButtonLoadMore>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport ImageGallery from '../ImageGallery/ImageGallery'\r\nimport { onError } from '../../NotifyError'\r\nimport Spinner from '../Spinner/Spinner'\r\nimport { ImagesInfoText } from './ImagesInfo.styled'\r\nimport { fetchImages } from '../../services/Api'\r\nimport Button from '../Button/Button'\r\n\r\nexport default function ImagesInfo({ imageName, onImageClick }) {\r\n  const [image, setImage] = useState([])\r\n  const [error, setError] = useState(false)\r\n  const [page, setPage] = useState(1)\r\n  const [status, setStatus] = useState('idle')\r\n\r\n  useEffect(() => {\r\n    if (!imageName) {\r\n      return\r\n    }\r\n\r\n    setStatus('pending')\r\n\r\n    let imageArray\r\n    resetPage()\r\n\r\n    async function Fetch() {\r\n      try {\r\n        fetchImages(imageName, page).then((data) => {\r\n          imageArray = data.hits\r\n\r\n          if (imageArray.length === 0) {\r\n            onError('Ваш запрос не дал результата')\r\n          }\r\n\r\n          setImage(imageArray)\r\n\r\n          setStatus('resolved')\r\n        })\r\n      } catch (error) {\r\n        setStatus('rejected')\r\n        setError(error.message)\r\n      }\r\n    }\r\n\r\n    Fetch()\r\n  }, [imageName])\r\n\r\n  useEffect(() => {\r\n    if (!imageName) {\r\n      return\r\n    }\r\n\r\n    setStatus('pending')\r\n\r\n    let imageArray\r\n\r\n    async function Fetch() {\r\n      try {\r\n        fetchImages(imageName, page).then((data) => {\r\n          imageArray = data.hits\r\n\r\n          if (imageArray.length === 0) {\r\n            onError('Ваш запрос не дал результата')\r\n          }\r\n\r\n          setImage((state) => [...state, ...imageArray])\r\n\r\n          setStatus('resolved')\r\n        })\r\n      } catch (error) {\r\n        setStatus('rejected')\r\n        setError(error.message)\r\n      }\r\n    }\r\n\r\n    Fetch()\r\n  }, [page])\r\n\r\n  const onButtonLoadMore = (event) => {\r\n    setPage((page) => page + 1)\r\n\r\n    scrollToEnd()\r\n  }\r\n\r\n  const scrollToEnd = () => {\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  const resetPage = () => {\r\n    setPage(1)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {status === 'idle' && <ImagesInfoText>Введите ваш запрос</ImagesInfoText>}\r\n\r\n      {status === 'pending' && (\r\n        <>\r\n          <Spinner />\r\n        </>\r\n      )}\r\n\r\n      {status === 'rejected' && <>{error.message}</>}\r\n\r\n      {status === 'resolved' && (\r\n        <>\r\n          <ImageGallery\r\n            images={image}\r\n            imageName={imageName}\r\n            onImageClick={onImageClick}\r\n          />\r\n\r\n          {image.length > 0 && <Button onClick={onButtonLoadMore}></Button>}\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport const ModalImg = styled.img`\r\n  height: 90vh;\r\n`\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`\r\n\r\nexport const ModalContainer = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`\r\n","import { ModalContainer, Overlay } from './Modal.styled'\r\nimport { createPortal } from 'react-dom'\r\nimport React, { Component, useEffect } from 'react'\r\n\r\nconst ModalRoot = document.querySelector('#root')\r\n\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown)\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown)\r\n    }\r\n  }, [])\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === 'Escape') {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  const handlerBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <Overlay onClick={handlerBackdropClick}>\r\n      <ModalContainer>{children}</ModalContainer>\r\n    </Overlay>,\r\n    ModalRoot,\r\n  )\r\n}\r\n\r\n// export default class Modal extends Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown)\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown)\r\n//   }\r\n\r\n//   handleKeyDown = (e) => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onClose()\r\n//     }\r\n//   }\r\n\r\n//   handlerBackdropClick = (e) => {\r\n//     if (e.currentTarget === e.target) {\r\n//       this.props.onClose()\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return createPortal(\r\n//       <Overlay onClick={this.handlerBackdropClick}>\r\n//         <ModalContainer>{this.props.children}</ModalContainer>\r\n//       </Overlay>,\r\n//       ModalRoot,\r\n//     )\r\n//   }\r\n// }\r\n","import React, { useState } from 'react'\r\nimport Searchbar from '../Searchbar/Searchbar'\r\nimport ImagesInfo from '../ImagesInfo/ImagesInfo'\r\nimport { Container, ModalImg } from './App.styled'\r\nimport Modal from '../Modal/Modal'\r\n\r\nexport default function App() {\r\n  const [imageName, setImageName] = useState('')\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [largeImageURL, setLargeImageURL] = useState('')\r\n\r\n  const toggleModal = (largeImageURL) => {\r\n    setShowModal(!showModal)\r\n    setLargeImageURL(largeImageURL || '')\r\n  }\r\n\r\n  const onSubmit = (imageName) => {\r\n    setImageName(imageName)\r\n\r\n    console.log(imageName)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Searchbar onSubmit={onSubmit}></Searchbar>\r\n      <ImagesInfo imageName={imageName} onImageClick={toggleModal}></ImagesInfo>\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <ModalImg src={largeImageURL}></ModalImg>\r\n        </Modal>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}